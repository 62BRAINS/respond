{"version":3,"sources":["submissions/submissions.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAoBA;gBAWE,8BAAqB,kBAAqC,EAAU,OAAe;oBAA9D,uBAAkB,GAAlB,kBAAkB,CAAmB;oBAAU,YAAO,GAAP,OAAO,CAAQ;gBAAG,CAAC;gBAEvF;;;mBAGG;gBACH,uCAAQ,GAAR;oBAEE,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;oBACjD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;oBAEtB,IAAI,CAAC,IAAI,EAAE,CAAC;gBAEd,CAAC;gBAED;;mBAEG;gBACH,mCAAI,GAAJ;oBAAA,iBAQC;oBANC,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE;yBACZ,SAAS,CACR,UAAA,IAAI,IAAM,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,EACpC,UAAA,KAAK,IAAO,KAAI,CAAC,OAAO,CAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CACvC,CAAC;gBACtB,CAAC;gBAED;;mBAEG;gBACH,oCAAK,GAAL;oBACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACvB,CAAC;gBAED;;;;mBAIG;gBACH,wCAAS,GAAT,UAAU,UAAU;oBAClB,IAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC;gBACvC,CAAC;gBAED;;mBAEG;gBACH,2CAAY,GAAZ;oBACE,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;gBAC3C,CAAC;gBAED;;;;mBAIG;gBACH,uCAAQ,GAAR,UAAS,UAAU;oBACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBAC/B,CAAC;gBAED;;;;mBAIG;gBACH,yCAAU,GAAV,UAAW,UAAU;oBACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC1B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBAC/B,CAAC;gBAED;;mBAEG;gBACH,sCAAO,GAAP,UAAS,GAAG;oBAEV,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAEtB,EAAE,CAAA,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;wBACrB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,OAAO,EAAE,EAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAC,CAAC,CAAE,CAAC;oBACpD,CAAC;gBAEH,CAAC;gBA7GH;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,qBAAqB;wBAC/B,WAAW,EAAE,8CAA8C;wBAC3D,SAAS,EAAE,CAAC,sCAAiB,CAAC;wBAC9B,UAAU,EAAE,CAAC,uDAAyB,EAAE,mDAAuB,EAAE,kCAAe,CAAC;wBACjF,KAAK,EAAE,CAAC,2BAAW,EAAE,6BAAa,CAAC;qBACtC,CAAC;oBAED,+BAAW,CAAC,cAAM,OAAA,8BAAe,EAAE,EAAjB,CAAiB,CAAC;;wCAAA;gBAuGrC,2BAAC;;YAAD,CArGA,AAqGC,IAAA;YArGD,uDAqGC,CAAA","file":"public/src/submissions/submissions.component.js","sourcesContent":["import {Component} from '@angular/core';\nimport {tokenNotExpired} from 'angular2-jwt/angular2-jwt';\nimport {RouteConfig, Router, ROUTER_DIRECTIVES, ROUTER_PROVIDERS, CanActivate} from '@angular/router-deprecated';\nimport {TranslatePipe} from 'ng2-translate/ng2-translate';\nimport {SubmissionService} from './app/shared/services/submission.service';\nimport {RemoveSubmissionComponent} from './app/shared/components/submissions/remove-submission/remove-submission.component';\nimport {ViewSubmissionComponent} from './app/shared/components/submissions/view-submission/view-submission.component';\nimport {DrawerComponent} from './app/shared/components/drawer/drawer.component';\nimport {TimeAgoPipe} from './app/shared/pipes/time-ago.pipe';\n\n@Component({\n    selector: 'respond-submissions',\n    templateUrl: './app/submissions/submissions.component.html',\n    providers: [SubmissionService],\n    directives: [RemoveSubmissionComponent, ViewSubmissionComponent, DrawerComponent],\n    pipes: [TimeAgoPipe, TranslatePipe]\n})\n\n@CanActivate(() => tokenNotExpired())\n\nexport class SubmissionsComponent {\n\n  id;\n  submission;\n  submissions;\n  errorMessage;\n  selectedSubmission;\n  removeVisible: boolean;\n  viewVisible: boolean;\n  drawerVisible: boolean;\n\n  constructor (private _submissionService: SubmissionService, private _router: Router) {}\n\n  /**\n   * Init submissions\n   *\n   */\n  ngOnInit() {\n\n    this.id = localStorage.getItem('respond.siteId');\n    this.removeVisible = false;\n    this.drawerVisible = false;\n    this.submission = {};\n    this.submissions = [];\n\n    this.list();\n\n  }\n\n  /**\n   * Updates the list\n   */\n  list() {\n\n    this.reset();\n    this._submissionService.list()\n                     .subscribe(\n                       data => { this.submissions = data; },\n                       error =>  { this.failure(<any>error); }\n                      );\n  }\n\n  /**\n   * Resets an modal booleans\n   */\n  reset() {\n    this.removeVisible = false;\n    this.viewVisible = false;\n    this.drawerVisible = false;\n    this.submission = {};\n  }\n\n  /**\n   * Sets the list item to active\n   *\n   * @param {Submission} submission\n   */\n  setActive(submission) {\n    this.selectedSubmission = submission;\n  }\n\n  /**\n   * Shows the drawer\n   */\n  toggleDrawer() {\n    this.drawerVisible = !this.drawerVisible;\n  }\n\n  /**\n   * Shows the view dialog\n   *\n   * @param {Submission} submission\n   */\n  showView(submission) {\n    this.viewVisible = true;\n    this.submission = submission;\n  }\n\n  /**\n   * Shows the remove dialog\n   *\n   * @param {Submission} submission\n   */\n  showRemove(submission) {\n    this.removeVisible = true;\n    this.submission = submission;\n  }\n\n  /**\n   * handles error\n   */\n  failure (obj) {\n\n    toast.show('failure');\n\n    if(obj.status == 401) {\n      this._router.navigate( ['Login', {id: this.id}] );\n    }\n\n  }\n\n}"],"sourceRoot":"/source/"}